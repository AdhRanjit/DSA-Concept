#Leetcode - 912

'''
Example 1:

Input: nums = [5,2,3,1]
Output: [1,2,3,5]
Explanation: After sorting the array, the positions of some numbers are not changed (for example, 2 and 3), while the positions of other numbers are changed (for example, 1 and 5).
Example 2:

Input: nums = [5,1,1,2,0,0]
Output: [0,0,1,1,2,5]
Explanation: Note that the values of nums are not necessairly unique.

'''

class Solution(object):
    def sortArray(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """
        if len(nums) > 1:
            mid = len(nums) // 2
            left_array = nums[:mid]
            right_array = nums[mid:]

            # Recursive calls
            self.sortArray(left_array)
            self.sortArray(right_array)  # Fixed missing parenthesis

            i = j = k = 0

            # Merging the arrays
            while i < len(left_array) and j < len(right_array):
                if left_array[i] < right_array[j]:
                    nums[k] = left_array[i]
                    i += 1
                else:
                    nums[k] = right_array[j]
                    j += 1
                k += 1

            # If there are any remaining elements in left_array
            while i < len(left_array):
                nums[k] = left_array[i]
                i += 1
                k += 1

            # If there are any remaining elements in right_array
            while j < len(right_array):
                nums[k] = right_array[j]
                j += 1
                k += 1
            
        return nums  # Return the sorted array

